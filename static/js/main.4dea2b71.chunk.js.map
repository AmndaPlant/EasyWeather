{"version":3,"sources":["DayCard.js","DegreeToggle.js","SearchBar.js","WeekContainer.js","App.js","index.js","apiKeys.js"],"names":["DayCard","reading","degreeType","newDate","Date","weekDay","dt","setTime","img","weather","id","celsius","Math","round","main","temp","fahrenheit","desc","description","charAt","toUpperCase","slice","className","moment","format","DegreeToggle","updateForecastDegree","Fragment","type","name","value","checked","onChange","htmlFor","SearchBar","handleSubmit","onSubmit","placeholder","aria-label","WeekContainer","props","event","setState","target","console","log","state","fetchWeather","preventDefault","fullData","dailyData","city","this","weatherURL","apiConfig","owmKey","fetch","then","res","json","data","cod","list","filter","dt_txt","includes","map","index","key","formatDayCards","React","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4dea2b71.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nconst DayCard = ({reading, degreeType}) => {\n  let newDate = new Date();\n  const weekDay = reading.dt * 1000;\n  newDate.setTime(weekDay);\n\n  const img = `owf owf-${reading.weather[0].id} owf-5x`\n\n  const celsius = Math.round(reading.main.temp)\n  const fahrenheit = Math.round((celsius * 9 / 5) + 32);\n  const desc = reading.weather[0].description.charAt(0).toUpperCase() + reading.weather[0].description.slice(1);\n\n  return (\n    <div className=\"col-sm-2\">\n      <div className=\"card\">\n        <h3 className=\"card-title\">{moment(newDate).format(\"dddd\")}</h3>\n        <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do, h:mm a\")}</p>\n        <i className={img}></i> \n        <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{desc}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DayCard;","import React from 'react';\n\nconst DegreeToggle = ({degreeType, updateForecastDegree}) => {\n  return (\n    <React.Fragment>\n      <div className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"degree-type\"\n          id=\"celsius\"\n          value=\"celsius\"\n          checked={degreeType === \"celsius\"}\n          onChange={updateForecastDegree}\n        />\n        <label className=\"form-check-label\" htmlFor=\"celsius\">Celsius</label>\n      </div>\n      <div className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"degree-type\"\n          id=\"fahrenheit\"\n          value=\"fahrenheit\"\n          checked={degreeType===\"fahrenheit\"}\n          onChange={updateForecastDegree}\n        />\n        <label className=\"form-check-label\" htmlFor=\"fahrenheit\">Fahrenheit</label>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default DegreeToggle;","import React from 'react';\n\nconst SearchBar = ({handleSubmit}) => {\n  return (\n    <form \n      className=\"form-inline d-flex justify-content-center md-form form-sm active-cyan-2 mt-2\"\n      onSubmit={handleSubmit}>\n      <input \n        className=\"form-control form-control-sm mr-3 w-75\"\n        type=\"text\"\n        placeholder=\"City\"\n        aria-label=\"City\"/>\n    </form>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport apiConfig from './apiKeys';\nimport DayCard from './DayCard';\nimport DegreeToggle from './DegreeToggle';\nimport SearchBar from './SearchBar';\n\nclass WeekContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullData: [],\n      dailyData: [],\n      degreeType: \"celsius\",\n      city: \"Ottawa\",\n    }\n  }\n\n  updateForecastDegree = event => {\n    this.setState({\n      degreeType: event.target.value,\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit = event => {\n    this.fetchWeather(event.target[0].value);\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    this.fetchWeather(this.state.city);\n  }\n\n  fetchWeather(city) {\n    const weatherURL = `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=${apiConfig.owmKey}`;\n\n    fetch(weatherURL)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.cod !== \"200\") {\n          this.setState({\n            city: \"Error, no city\",\n          }, () => console.log(data.cod));\n          return;\n        }\n        const dailyData = data.list.filter((reading) => reading.dt_txt.includes(\"18:00:00\"))\n        this.setState({\n          fullData: data.list,\n          dailyData: dailyData,\n          city: city,\n        }, () => console.log(this.state));\n      });\n  }\n\n  formatDayCards() {\n    return this.state.dailyData.map((reading, index) => <DayCard reading={reading} key={index} degreeType={this.state.degreeType}/>);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-1 jumbotron\">5-Day Forecast</h1>\n        <h5 className=\"display-5 text-muted\">{this.state.city}</h5>\n        <SearchBar city={this.state.city} handleSubmit={this.handleSubmit} /> \n        <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree} />\n        <div className=\"row justify-content-center\">\n          {this.formatDayCards()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeekContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport WeekContainer from './WeekContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WeekContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = {\n  'owmKey': '58abfd87d2804c10f44de168d0bf8854'\n}"],"sourceRoot":""}