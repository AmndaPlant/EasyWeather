{"version":3,"sources":["DayCard.js","DegreeToggle.js","SearchBar.js","WeekContainer.js","App.js","index.js","apiKeys.js"],"names":["DayCard","reading","degreeType","newDate","Date","weekDay","dt","setTime","img","weather","id","celsius","Math","round","main","temp","fahrenheit","desc","description","charAt","toUpperCase","slice","className","moment","format","DegreeToggle","updateForecastDegree","Fragment","type","name","value","checked","onChange","htmlFor","SearchBar","props","state","city","handleChange","bind","event","this","setState","target","onSubmit","handleSubmit","placeholder","React","Component","WeekContainer","console","log","fetchWeather","preventDefault","fullData","dailyData","weatherURL","apiConfig","owmKey","fetch","then","res","json","data","list","filter","dt_txt","includes","map","index","key","formatDayCards","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.114a16d9.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nconst DayCard = ({reading, degreeType}) => {\n  let newDate = new Date();\n  const weekDay = reading.dt * 1000;\n  newDate.setTime(weekDay);\n\n  const img = `owf owf-${reading.weather[0].id} owf-5x`\n\n  const celsius = Math.round(reading.main.temp)\n  const fahrenheit = Math.round((celsius * 9 / 5) + 32);\n  const desc = reading.weather[0].description.charAt(0).toUpperCase() + reading.weather[0].description.slice(1);\n\n  return (\n    <div className=\"col-sm-2\">\n      <div className=\"card\">\n        <h3 className=\"card-title\">{moment(newDate).format(\"dddd\")}</h3>\n        <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do, h:mm a\")}</p>\n        <i className={img}></i> \n        <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{desc}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DayCard;","import React from 'react';\n\nconst DegreeToggle = ({degreeType, updateForecastDegree}) => {\n  return (\n    <React.Fragment>\n      <div className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"degree-type\"\n          id=\"celsius\"\n          value=\"celsius\"\n          checked={degreeType === \"celsius\"}\n          onChange={updateForecastDegree}\n        />\n        <label className=\"form-check-label\" htmlFor=\"celsius\">Celsius</label>\n      </div>\n      <div className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"degree-type\"\n          id=\"fahrenheit\"\n          value=\"fahrenheit\"\n          checked={degreeType===\"fahrenheit\"}\n          onChange={updateForecastDegree}\n        />\n        <label className=\"form-check-label\" htmlFor=\"fahrenheit\">Fahrenheit</label>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default DegreeToggle;","import React from 'react';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.city,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <input type=\"text\" placeholder=\"City\" onChange={this.handleChange} />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport apiConfig from './apiKeys';\nimport DayCard from './DayCard';\nimport DegreeToggle from './DegreeToggle';\nimport SearchBar from './SearchBar';\n\nclass WeekContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullData: [],\n      dailyData: [],\n      degreeType: \"celsius\",\n      city: \"Ottawa\",\n    }\n  }\n\n  updateForecastDegree = event => {\n    this.setState({\n      degreeType: event.target.value,\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit = event => {\n    this.fetchWeather(event.target[0].value);\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    this.fetchWeather(this.state.city);\n  }\n\n  fetchWeather(city) {\n    const weatherURL = `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=${apiConfig.owmKey}`;\n\n    fetch(weatherURL)\n      .then((res) => res.json())\n      .then((data) => {\n        const dailyData = data.list.filter((reading) => reading.dt_txt.includes(\"18:00:00\"))\n        this.setState({\n          fullData: data.list,\n          dailyData: dailyData,\n          city: city,\n        }, () => console.log(this.state));\n      });\n  }\n\n  formatDayCards() {\n    return this.state.dailyData.map((reading, index) => <DayCard reading={reading} key={index} degreeType={this.state.degreeType}/>);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-1 jumbotron\">5-Day Forecast</h1>\n        <h5 className=\"display-5 text-muted\">{this.state.city}</h5>\n        <SearchBar city={this.state.city} handleSubmit={this.handleSubmit} /> \n        <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree} />\n        <div className=\"row justify-content-center\">\n          {this.formatDayCards()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeekContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport WeekContainer from './WeekContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WeekContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = {\n  'owmKey': '58abfd87d2804c10f44de168d0bf8854'\n}"],"sourceRoot":""}