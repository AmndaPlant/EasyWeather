{"version":3,"sources":["apiKeys.js","DayCard.js","DegreeToggle.js","SearchBar.js","Loader.js","WeekContainer.js","Footer.js","App.js","index.js"],"names":["apiConfig","owmKey","DayCard","reading","degreeType","newDate","Date","weekDay","dt","setTime","img","weather","id","celsius","Math","round","main","temp","fahrenheit","desc","description","charAt","toUpperCase","slice","className","moment","format","DegreeToggle","updateForecastDegree","Fragment","type","name","value","checked","onChange","htmlFor","SearchBar","handleSubmit","onSubmit","placeholder","aria-label","Loader","WeekContainer","props","event","setState","target","loading","fetchWeather","preventDefault","componentDidMount","state","city","weatherURL","fetch","then","res","json","data","cod","dailyData","list","filter","dt_txt","includes","fullData","formatDayCards","map","index","key","this","React","Component","Footer","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b32f7c.chunk.js","sourcesContent":["const apiConfig = {\n  owmKey: '58abfd87d2804c10f44de168d0bf8854',\n}\n\nexport default apiConfig;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst DayCard = ({reading, degreeType}) => {\r\n  let newDate = new Date();\r\n  const weekDay = reading.dt * 1000;\r\n  newDate.setTime(weekDay);\r\n\r\n  const img = `owf owf-${reading.weather[0].id} owf-5x`\r\n\r\n  const celsius = Math.round(reading.main.temp)\r\n  const fahrenheit = Math.round((celsius * 9 / 5) + 32);\r\n  const desc = reading.weather[0].description.charAt(0).toUpperCase() + reading.weather[0].description.slice(1);\r\n\r\n  return (\r\n    <div className=\"col-sm-2\">\r\n      <div className=\"card\">\r\n        <h3 className=\"card-title\">{moment(newDate).format(\"dddd\")}</h3>\r\n        <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do, h:mm a\")}</p>\r\n        <i className={img}></i> \r\n        <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{desc}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayCard;","import React from 'react';\r\n\r\nconst DegreeToggle = ({degreeType, updateForecastDegree}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"degree-type\"\r\n          id=\"celsius\"\r\n          value=\"celsius\"\r\n          checked={degreeType === \"celsius\"}\r\n          onChange={updateForecastDegree}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"celsius\">Celsius</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"degree-type\"\r\n          id=\"fahrenheit\"\r\n          value=\"fahrenheit\"\r\n          checked={degreeType===\"fahrenheit\"}\r\n          onChange={updateForecastDegree}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"fahrenheit\">Fahrenheit</label>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DegreeToggle;","import React from 'react';\r\n\r\nconst SearchBar = ({handleSubmit}) => {\r\n  return (\r\n    <form \r\n      className=\"form-inline d-flex justify-content-center md-form form-sm active-cyan-2 mt-2\"\r\n      onSubmit={handleSubmit}>\r\n      <input \r\n        className=\"form-control form-control-sm mr-3 w-75\"\r\n        type=\"text\"\r\n        placeholder=\"City\"\r\n        aria-label=\"City\"/>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader center\">\r\n      <i className=\"fa fa-cog fa-spin\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport apiConfig from './apiKeys';\r\nimport DayCard from './DayCard';\r\nimport DegreeToggle from './DegreeToggle';\r\nimport SearchBar from './SearchBar';\r\nimport Loader from './Loader'\r\n\r\nclass WeekContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullData: [],\r\n      dailyData: [],\r\n      degreeType: \"celsius\",\r\n      city: \"Ottawa\",\r\n      loading: true,\r\n    }\r\n  }\r\n\r\n  updateForecastDegree = event => {\r\n    this.setState({\r\n      degreeType: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    this.setState({\r\n      loading: true,\r\n    })\r\n    this.fetchWeather(event.target[0].value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchWeather(this.state.city);\r\n  }\r\n\r\n  fetchWeather = city => {\r\n    const weatherURL = `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=${apiConfig.owmKey}`;\r\n\r\n    fetch(weatherURL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.cod !== \"200\") {\r\n          this.setState({\r\n            city: \"Error, no city\",\r\n          });\r\n          return;\r\n        }\r\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\r\n        this.setState({\r\n          fullData: data.list,\r\n          dailyData: dailyData,\r\n          city: city,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  formatDayCards = () => {\r\n    return this.state.dailyData.map((reading, index) => <DayCard reading={reading} key={index} degreeType={this.state.degreeType}/>);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-1 jumbotron\">5-Day Forecast</h1>\r\n        <h5 className=\"display-5 text-muted\">{this.state.city}</h5>\r\n        <SearchBar city={this.state.city} handleSubmit={this.handleSubmit} /> \r\n        <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree} />\r\n        {this.state.loading ?\r\n          <Loader /> : \r\n          <div className=\"row justify-content-center\">\r\n            {this.formatDayCards()}\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeekContainer;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer font-small blue\">\r\n      <div className=\"container text-center text-md-left\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mx-auto\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a href=\"https://github.com/AmndaPlant/EasyWeather\">EasyWeather on GitHub</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://api.openweathermap.org\">Powered by OpenWeatherMap</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport WeekContainer from './WeekContainer';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <WeekContainer />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}